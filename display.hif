HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	f8count.gdf
	{
		f8count [] []
		{
			8 [] [];
		}
	}
	lpm_constant.tdf
	{
		lpm_constant [LPM_CVALUE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			14 [LPM_CVALUE=0,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0];
			10 [LPM_CVALUE=7,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0];
			6 [LPM_CVALUE=0,LPM_WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			13 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data2,data1,data0];
			5 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			4 [DEPTH=0,WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			12 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,cout,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			3 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=1,width=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			11 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,cout,dataa2,dataa1,dataa0,datab2,datab1,datab0,add_sub];
			2 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=ADD,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,cout,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc,lpm_decode.inc,lpm_add_sub.inc,cmpconst.inc,lpm_compare.inc,lpm_counter.inc,dffeea.inc,aglobal.inc]
		{
			9 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=7,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,q1,q0,clock,clk_en,cnt_en,updown,sclr,sset];
			7 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=UP,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cout,clock];
			1 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=UP,LPM_WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cout,clock];
		}
	}
	display.tdf
	{
		display [USE_LPM_FOR_AHDL_OPERATORS] [lpm_counter.inc]
		{
			0 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [];
		}
	}
}
TREE
{
	display::(0,0):(0): display.tdf
	{
		lpm_counter:1:(34,2):(340,c_flash): lpm_counter.tdf
		{
			lpm_add_sub:2:(298,7):(77,add_sub): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(64,adder): addcore.tdf;
				altshift:4:(222,2):(101,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(127,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(135,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_constant:6:(318,6):(118,scdw): lpm_constant.tdf;
		}
		lpm_counter:7:(37,2):(393,c_ani): lpm_counter.tdf
		{
			f8count:8:(224,9):(73,p8c0): f8count.gdf;
		}
		lpm_counter:9:(38,2):(442,ani): lpm_counter.tdf
		{
			lpm_constant:10:(242,6):(63,sc): lpm_constant.tdf;
			lpm_add_sub:11:(307,8):(69,add_sub): lpm_add_sub.tdf
			{
				addcore:12:(212,4):(43,adder): addcore.tdf;
				altshift:13:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_constant:14:(318,6):(89,scdw): lpm_constant.tdf;
		}
	}
}
